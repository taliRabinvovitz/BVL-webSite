@model MultiLanguageDemo.Models.ContactModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@RHome.Contact</h4>
        <hr />

        @if (ViewBag.ContactResult != null)
        {
            var classFromResult = ViewBag.ContactResult ? "text-success" : "text-danger";
            <p class="@classFromResult"><strong>@ViewBag.ContactResultMessage</strong></p> 
        }
        else 
        { 
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ContactName, 
                    htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContactName, 
                        new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactName, "", 
                        new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@RGlobal.Send" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
}


@Scripts.Render("~/bundles/jqueryval")
@if (GlobalHelper.DefaultCulture != GlobalHelper.CurrentCulture)
{
    <script src="@Url.GetScript("jquery.validate.extension.js")" defer></script>
}

